SELECT V.nombre FROM Vino AS V, VinoTour AS VT, Tour AS T WHERE V.idvino = VT.idvino AND VT.eid = T.eid AND T.nombre = 'TOUR RIO ALHAJA FUENTES' AND V.cepa = 'MERLOT';
SELECT Sendero.nombre FROM (SELECT ids, COUNT(*) AS total FROM Registro WHERE estado = 'perdido' GROUP BY ids) AS senderos_perdidos, Sendero WHERE Sendero.ids = senderos_perdidos.ids AND senderos_perdidos.total = (SELECT MAX(total) FROM senderos_perdidos);
SELECT Sendero.nombre FROM (SELECT ids, COUNT(*) AS total FROM Registro WHERE estado = 'perdido' GROUP BY ids) AS senderos_perdidos, Sendero WHERE Sendero.ids = senderos_perdidos.ids AND senderos_perdidos.total = (SELECT MAX(total) FROM (SELECT ids, COUNT(*) AS total FROM Registro WHERE estado = 'perdido' GROUP BY ids));
SELECT Sendero.nombre FROM (SELECT ids, COUNT(*) AS total FROM Registro WHERE estado = 'perdido' GROUP BY ids) AS senderos_perdidos, Sendero WHERE Sendero.ids = senderos_perdidos.ids AND senderos_perdidos.total = (SELECT MAX(total) FROM (SELECT ids, COUNT(*) AS total FROM Registro WHERE estado = 'perdido' GROUP BY ids) AS q);
\copy usuario from '/home/grupo60/Datos/usuario.csv' delimiter ';' CSV HEADER
\copy usuario from '/home/grupo60/Datos/usuario.csv' delimiter ',' CSV HEADER
\copy sendero from '/home/grupo60/Datos/senderos.csv' delimiter ';' CSV HEADER
\copy parquesnacionales(nombre, hectareas, descripcion, tarifa, idp) from '/home/grupo60/Datos/parques_nacionales.csv' delimiter ';' CSV HEADER
\copy atractivo from '/home/grupo60/Datos/atractivos.csv' delimiter ';' CSV HEADER
\copy region from '/home/grupo60/Datos/region.csv' delimiter ',' CSV HEADER
\copy vina(nombre,telefono_contacto, descripcion, idv) from '/home/grupo60/Datos/vinas.csv' delimiter ';' CSV HEADER
\copy vino(idvino, nombre, cepa, descripcion, precio) from '/home/grupo60/Datos/vino.csv' delimiter ';' CSV HEADER
\copy tour from '/home/grupo60/Datos/enoturismo.csv' delimiter ';' CSV HEADER
DROP TABLE IF EXISTS Registro;
CREATE TABLE Registro(regid INT, fecha_ent DATE, fecha_sal DATE, estado VARCHAR(60), idu INT, ids INT, PRIMARY KEY (regid), FOREIGN KEY (idu) REFERENCES Usuario, FOREIGN KEY (ids) REFERENCES Sendero);
\copy registro(regid, idu, ids, fecha_ent, fecha_sal, estado) from '/home/grupo60/Datos/registro.csv' delimiter ',' CSV HEADER
DROP TABLE IF EXISTS ParqueSendero;
DROP TABLE IF EXISTS Registro;
DROP TABLE IF EXISTS Sendero;
CREATE TABLE Sendero(ids INT, nombre VARCHAR(300), largo FLOAT, dificultad VARCHAR(60), duracion INT, PRIMARY KEY (ids));
\copy sendero from '/home/grupo60/Datos/senderos.csv' delimiter ';' CSV HEADER
\copy sendero from '/home/grupo60/Datos/senderos.csv' delimiter ';' CSV HEADER
\d
CREATE TABLE Registro(regid INT, fecha_ent DATE, fecha_sal DATE, estado VARCHAR(60), idu INT, ids INT, PRIMARY KEY (regid), FOREIGN KEY (idu) REFERENCES Usuario, FOREIGN KEY (ids) REFERENCES Sendero);
\copy registro(regid, idu, ids, fecha_ent, fecha_sal, estado) from '/home/grupo60/Datos/registro.csv' delimiter ',' CSV HEADER
CREATE TABLE ParqueSendero(ids INT, idp INT, PRIMARY KEY (ids), FOREIGN KEY (ids) REFERENCES Sendero, FOREIGN KEY (idp) REFERENCES ParquesNacionales);
\copy parquesendero(idp,ids) from '/home/grupo60/Datos/parques_senderos.csv' delimiter ';' CSV HEADER
\copy parqueatractivo from '/home/grupo60/Datos/parques_atractivos.csv' delimiter ';' CSV HEADER
\copy parqueregion(idr, idp) from '/home/grupo60/Datos/region_parque.csv' delimiter ';' CSV HEADER
\copy regionvina from '/home/grupo60/Datos/vina_region.csv' delimiter ';' CSV HEADER
\copy vinavino(idvino,idv) from '/home/grupo60/Datos/vino_vina.csv' delimiter ';' CSV HEADER
\copy vinotour from '/home/grupo60/Datos/enovino.csv' delimiter ',' CSV HEADER
\copy vinatour(idv,eid) from '/home/grupo60/Datos/vina_tour.csv' delimiter ';' CSV HEADER
SELECT V.nombre FROM Vino AS V, VinoTour AS VT, Tour AS T WHERE V.idvino = VT.idvino AND VT.eid = T.eid AND T.nombre = 'TOUR RIO ALHAJA FUENTES' AND V.cepa = 'MERLOT';
SELECT V.nombre FROM Vino AS V, VinoTour AS VT, Tour AS T WHERE V.idvino = VT.idvino AND VT.eid = T.eid AND T.nombre = 'VIÃ‘A - A' AND V.cepa = 'MERLOT';
select * from vinotour;
select sid from sendero where largo = (select max(largo) from sendero);
select sid from sendero where largo = (select max(largo) from sendero);
select ids from sendero where largo = (select max(largo) from sendero);
select max(largo) from sendero;
\d
select * from username;
select * parquesnacionales;
\d
select * from parquesnacionales;
select * from parquesnacionales;
select * from sendero;
select * from parquesnacionales;
select * from sendero;
select * from parquesnacionales;
select * from vina;
\q
\dt
select * from usuario;
select * from usuario;
alter table usuario drop column created_at, drop column username;
select * from usuario;
alter table usuario alter column correo type varchar(50) not null u;
alter table usuario alter column correo type varchar(50) not nullunique;
alter table usuario alter column correo set not null;
alter table usuario alter column correo add constraint correo_uniq uniue;
alter table usuario add constraint correo_unico unique (correo);
alter al;
alter table usuario add constraint uid serial (uid);
select * from usuario;
alter table usuario add constraint correo unique (correo);
select * from usuario;
select * from usuario where correo = "yteran@hotmail.com";
select * from usuario where correo = 'yteran@hotmail.com';
delete from usuario a using usuario b where a.id > b.id and a.correo qads;
delete from usuario a using usuario b where a.id > b.id and a;
delete from usuario a using usuario b where a.id > b.id and a.correo = b.correo;
delete from usuario a using usuario b where a.uid > b.uid and a.correo = b.correo;
delete from usuario as a using usuario as b where a.uid > b.uid and a.correo = b.correo;
23456DELETE  FROM    basket a        USING basket bWHERE    a.id > b.idfasdfas AND a.fruit = b.fruit;
DELETE  FROM    usuario a        USING usuario bWHERE    a.uid > b.uid    AND a.correo = b.correo;
DELETE  FROM    usuario a        USING usuario bWHERE    a.idu > b.idu    AND a.correo = b.correo;
select idu, count(correo) from usuario group by correo having count(da;;adfa;;;a);
select idu, count(correo) from usuario group by correo having affd;
select idu, count(correo) from usuario group by correo having count(correo) > 1;
select idu, count(correo) from usuario group by correo having count(correo) > 1 order by idu;
select idu, count(correo) from usuario group by correo having count(correo) > 1 order by usuario.idu;
select count(correo) from usuario group by correo having count(correo) > 1 order by usuario.idu;
select count(correo) from usuario group by correo having count(correo) > 1;
select * from usuario where idu = 306;
select * from registro where idu = 306;
select * from registro where idu = 7;
delete from registro where idu = 306;
delete from usuario where idu = 306;
alter table usuario add constraint correo_unico unique (correo);
select constraints from usuario;
alter table usuario alter column  set not null;
alter table usuario add check serial (uid);
insert into usuario (password) values (vloera@gmail.com) where uid = 0;
exit();
q;
\q
select * from usuario;
\q
select * from usuario;
select * from usuario;
\q
select * from usuario;
\q
select * from usuario;
\d
\q
select * from usuario;
UPDATE usuario SET password = 'xd' WHERE idu = 6;
select * from usuario;
\q
select * from usuario;
\d
\q
select * from usuario;
\q
